package pt.isep.meia.AICare;

import pt.isep.meia.AICare.domain.model.Evidence;
import pt.isep.meia.AICare.domain.model.Hypothesis;
import pt.isep.meia.AICare.domain.entities.Conclusion;
import pt.isep.meia.AICare.domain.entities.Question
import java.util.UUID;
import java.util.List;

global Question nextQuestion;
global Conclusion conclusion;
global UUID surveyId;
global List<Evidence> evidences;
global String lastRule;

import function pt.isep.meia.AICare.application.utils.AnswerChecker.answer
import pt.isep.meia.AICare.domain.model.Hypothesis
import pt.isep.meia.AICare.domain.entities.Conclusion;

query "Conclusions"
    $conclusion : Conclusion()
end

rule "start"
    when
        eval(evidences.isEmpty())
    then
        System.out.println("Starting survey");
        Question q = new Question(surveyId, Evidence.BLOOD_EAR);
        insert(q);
        nextQuestion = q;
        lastRule = "start";
end

rule "r1"
    when
        eval(answer(evidences, Evidence.BLOOD_EAR, "yes"))
    then
        Hypothesis h = new Hypothesis("haemorrhage", "upper type");
        insert(h);

        Question q = new Question(surveyId, Evidence.EARACHE);
        insert(q);
        nextQuestion = q;
        lastRule = "r1";
end

rule "r2"
    when
        eval(answer(evidences, Evidence.BLOOD_EAR, "no"))
    then
        Hypothesis h = new Hypothesis("haemorrhage", "lower type");
        insert(h);

        Question q = new Question(surveyId, Evidence.BLOOD_NOSE);
        insert(q);
        nextQuestion = q;
        lastRule = "r2";
end

rule "r3"
    when
        Hypothesis(description == "haemorrhage", value == "upper type")
        eval(answer(evidences, Evidence.EARACHE, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.OTORRHAGIA);
        insert(c);
        conclusion = c;
        System.out.println("Inserted first question: " + c.toString());
        System.out.println("nextQuestion: " + conclusion.toString());
        lastRule = "r3";
end

rule "r4"
    when
        Hypothesis(description == "haemorrhage", value == "upper type")
        eval(answer(evidences, Evidence.DEAFNESS, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.OTORRHAGIA);
        insert(c);
        conclusion = c;
        lastRule = "r4";
end

rule "r5"
    when
        Hypothesis(description == "haemorrhage", value == "upper type")
        eval(answer(evidences, Evidence.CEREBROSPINAL, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.SKULL_FRACTURE);
        insert(c);
        conclusion = c;
        lastRule = "r5";
end

rule "r6"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_NOSE, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.EPISTAXE);
        insert(c);
        conclusion = c;
        lastRule = "r6";
end

rule "r7"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_MOUTH, "yes"))
        eval(answer(evidences, Evidence.BLOOD_BROWN, "yes"))
        eval(answer(evidences, Evidence.VOMITING, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.HEMATHESE);
        insert(c);
        conclusion = c;
        lastRule = "r7";
end

rule "r8"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_MOUTH, "yes"))
        eval(answer(evidences, Evidence.BLOOD_BROWN, "no"))
        eval(answer(evidences, Evidence.VOMITING, "no"))
    then
        Conclusion c = new Conclusion(Conclusion.MOUTH_HAEMORRHAGE);
        insert(c);
        conclusion = c;
        lastRule = "r8";
end

rule "r9"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_VAGINA, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.METRORRHAGIA);
        insert(c);
        conclusion = c;
        lastRule = "r9";
end

rule "r10"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_PENIS, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.HEMATURIA);
        insert(c);
        conclusion = c;
        lastRule = "10";
end

rule "r11"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_ANUS, "yes"))
        eval(answer(evidences, Evidence.BLOOD_COFFEE, "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.MELENA);
        insert(c);
        conclusion = c;
        lastRule = "r11";
end

rule "r12"
    when
        Hypothesis(description == "haemorrhage", value == "lower type")
        eval(answer(evidences, Evidence.BLOOD_ANUS, "yes"))
        eval(answer(evidences, Evidence.BLOOD_COFFEE, "no"))
    then
        Conclusion c = new Conclusion(Conclusion.RECTAL_BLEEDING);
        insert(c);
        conclusion = c;
        lastRule = "r12";
end

rule "unknown"
    when
        eval(lastRule == "r12")
        eval(!evidences.isEmpty())
        not Conclusion()
    then
        Conclusion c = new Conclusion(Conclusion.UNKNOWN);
        insert(c);
        conclusion = c;
end
